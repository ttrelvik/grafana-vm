---
- name: Ensure base directory exists
  ansible.builtin.file:
    path: "{{ observability_config.base_directory }}"
    state: directory
    mode: '0755'

- name: Copy static configuration files
  ansible.builtin.copy:
    src: "{{ item.name }}"
    dest: "{{ observability_config.base_directory }}/{{ item.name }}"
    mode: "{{ item.mode }}"
  loop: "{{ observability_config.files }}"

- name: Copy templated configuration files
  ansible.builtin.template:
    src: "{{ item.src_name }}"
    dest: "{{ observability_config.base_directory }}/{{ item.dest_name }}"
    mode: "{{ item.mode }}"
  loop: "{{ observability_config.templated_files }}"

- name: Copy configuration directories
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ observability_config.base_directory }}/{{ item.dest }}"
    mode: "{{ item.file_mode }}"
    directory_mode: "{{ item.dir_mode }}"
  loop: "{{ observability_config.directories }}"

- name: Handle special files
  ansible.builtin.file:
    path: "{{ observability_config.base_directory }}/{{ item.path }}"
    state: "{{ item.state | default('file') }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
  loop: "{{ observability_config.special_files }}"

- name: Deploy observability stack via Docker Compose
  community.docker.docker_compose_v2:
    project_src: /opt/stack
    state: present
  environment:
    DOMAIN_NAME: "{{ domain_name }}"
  register: compose_result
  retries: 3
  delay: 10

- name: Debug what happened
  ansible.builtin.debug:
    var: compose_result
    verbosity: 1

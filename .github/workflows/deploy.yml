name: "Deploy to Production"

on:
  # Trigger the workflow on pushes to the main branch
  push:
    branches:
      - main

jobs:
  deploy:
    name: "Deploy to Production"
    runs-on: ubuntu-latest

    # Permissions for the 'deploy' job
    permissions:
      contents: read # Only needs to read the repo to checkout

    # Set environment variables for all steps in this job
    env:
      TF_WORKSPACE: grafana-prod
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_home_ddns_hostname: ${{ secrets.HOME_DDNS_HOSTNAME }}
      DOMAIN_NAME: ${{ steps.outputs.outputs.fqdn }}
      ENTRA_TENANT_ID: ${{ secrets.ENTRA_TENANT_ID }}
      ENTRA_CLIENT_ID: ${{ secrets.ENTRA_CLIENT_ID }}
      ENTRA_CLIENT_SECRET: ${{ secrets.ENTRA_CLIENT_SECRET }}
      FORWARD_AUTH_SECRET: ${{ secrets.FORWARD_AUTH_SECRET }}
      ALLOWED_USERS: ${{ secrets.ALLOWED_USERS }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Get Runner's Public IP
        id: ip
        run: echo "ipv4=$(curl -s ifconfig.me)" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="runner_ip_address=${{ steps.ip.outputs.ipv4 }}"

      - name: Get Terraform Outputs
        id: outputs
        run: |
          echo "vm_ip=$(terraform output -raw vm_public_ip)" >> $GITHUB_OUTPUT
          echo "fqdn=$(terraform output -raw fqdn)" >> $GITHUB_OUTPUT

      - name: Wait for NSG rules to propagate
        run: sleep 45

      - name: Install Ansible community.docker collection
        run: ansible-galaxy collection install -r ./ansible/requirements.yml

      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        env:
          DOMAIN_NAME: ${{ steps.outputs.outputs.fqdn }}
        with:
          playbook: playbook.yml
          directory: ./ansible
          inventory: |
            [servers]
            ${{ steps.outputs.outputs.vm_ip }}
            
            [all:vars]
            ansible_user=azureuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}